<template>
	<view class="tabs">
		<scroll-view id="tab-bar" class="scroll-h" :scroll-x="true" :show-scrollbar="false" :scroll-into-view="scrollInto">
			<view v-for="(tab, index) in tabBars" :key="tab.id" class="uni-tab-item" :id="tab.id" :data-current="index" @click="ontabtap">
				<text class="uni-tab-item-title" :class="tabIndex == index ? 'uni-tab-item-title-active' : ''">{{ tab.name }}</text>
			</view>
		</scroll-view>
		<view class="line-h"></view>
		
		<swiper :current="tabIndex" class="swiper-box" style="flex: 1;" :duration="300" @change="ontabchange">
			<swiper-item class="swiper-item" v-for="(tab, index1) in newsList" :key="index1">
				<scroll-view class="scroll-v list" @scroll="scroll" enableBackToTop="true" :scroll-top="120" scroll-y @scrolltolower="loadMore(index1)">
					<uni-search-bar v-if="isShowSearch" @confirm="search" v-model="keyword"></uni-search-bar>
					<media-item :listData="tab.data" />
					<view class="loading-more" v-if="tab.isLoading || tab.data.length > 4">
						<text class="loading-more-text">{{ tab.loadingText }}</text>
					</view>
				</scroll-view>
			</swiper-item>
		</swiper>
	</view>
</template>
<script>
import mediaItem from '../index/list.vue';
// 缓存每页最多
const MAX_CACHE_DATA = 100;
// 缓存页签数量
const MAX_CACHE_PAGE = 3;
export default {
	components: {
		mediaItem
	},
	data() {
		return {
			isShowSearch: false,
			keyword: '',
			newsList: [],
			cacheTab: [],
			tabIndex: 0,
			tabBars: [
				{
					id: 'home',
					name: '首页',
					requestUrl: '/api/blogposts/@sitehome',
				},
				{
					id: 'news',
					name: '新闻',
					requestUrl: '/api/NewsItems'
				},
				{
					id: 'good',
					name: '精华',
					requestUrl: '/api/blogposts/@picked',
				},
				{
					id: 'best',
					name: '推荐',
					requestUrl: '/api/newsitems/@recommended'
				},
				{
					id: 'hot',
					name: '热门',
					requestUrl: '/api/newsitems/@hot'
				}
			],
			scrollInto: '',
			showTips: false,
			navigateFlag: false,
			pulling: false
		};
	},
	onLoad() {
		this.tabBars.forEach(tabBar => {
			this.newsList.push({
				data: [],
				isLoading: false,
				refreshText: '',
				loadingText: '加载更多...',
				pageIndex: 1,
				pageSize: 10
			});
		});
		this.getList(0);
	},
	onShareAppMessage() {
		return {
			title: '代码改变世界',
			path: '/pages/index/home',
			imageUrl: '../../static/logo.png'
		};
	},
	onShareTimeline() {
		return {
			title: '代码改变世界',
			path: '/pages/index/home',
			imageUrl: '../../static/logo.png'
		};
	},
	onAddToFavorites() {
		return {
			title: '代码改变世界',
			path: '/pages/index/home',
			imageUrl: '../../static/logo.png'
		};
	},
	methods: {
		search(res) {
			this.keyword = '';
			uni.navigateTo({
				url: '/pages/index/search?keyWords=' + res.value
			});
		},	
		async getList(index) {
			let activeTab = this.newsList[index];
			const data = await this.request({
				url: this.tabBars[index].requestUrl,
				data: {
					pageIndex: this.newsList[index].pageIndex,
					pageSize: this.newsList[index].pageSize
				}
			});
			activeTab.data = activeTab.data.concat(data);
		},
		loadMore(e) {
			this.newsList[this.tabIndex].pageIndex += 1;
			this.getList(this.tabIndex);
		},
		ontabtap(e) {
			let index = e.target.dataset.current || e.currentTarget.dataset.current;
			this.switchTab(index);
		},
		ontabchange(e) {
			let index = e.target.current || e.detail.current;
			this.switchTab(index, true);
		},
		async switchTab(index, open) {
			if (open && this.newsList[index].data.length === 0) {
				await this.getList(index);
			}

			if (this.tabIndex === index) {
				return;
			}

			// 缓存 tabId
			if (this.newsList[this.tabIndex].data.length > MAX_CACHE_DATA) {
				let isExist = this.cacheTab.indexOf(this.tabIndex);
				if (isExist < 0) {
					this.cacheTab.push(this.tabIndex);
				}
			}
			this.tabIndex = index;
			this.scrollInto = this.tabBars[index].id;

			// 释放 tabId
			if (this.cacheTab.length > MAX_CACHE_PAGE) {
				let cacheIndex = this.cacheTab[0];
				this.clearTabData(cacheIndex);
				this.cacheTab.splice(0, 1);
			}
		},
		clearTabData(e) {
			this.newsList[e].data.length = 0;
			this.newsList[e].loadingText = '加载更多...';
		},
		refreshData() {},
		scroll: function(e) {
			this.isShowSearch = true
		},
		onrefresh(e) {
			var tab = this.newsList[this.tabIndex];
			if (!tab.refreshFlag) {
				return;
			}
			tab.refreshing = true;
			tab.refreshText = '正在刷新...';

			setTimeout(() => {
				this.refreshData();
				this.pulling = true;
				tab.refreshing = false;
				tab.refreshFlag = false;
				tab.refreshText = '已刷新';
				setTimeout(() => {
					// TODO fix ios和Android 动画时间相反问题
					this.pulling = false;
				}, 500);
			}, 2000);
		},
		onpullingdown(e) {
			var tab = this.newsList[this.tabIndex];
			if (tab.refreshing || this.pulling) {
				return;
			}
			if (Math.abs(e.pullingDistance) > Math.abs(e.viewHeight)) {
				tab.refreshFlag = true;
				tab.refreshText = '释放立即刷新';
			} else {
				tab.refreshFlag = false;
				tab.refreshText = '下拉可以刷新';
			}
		}
	}
};
</script>

<style>
.tabs {
	flex: 1;
	flex-direction: column;
	overflow: hidden;
	background-color: #ffffff;
	/* #ifndef APP-PLUS */
	height: 100vh;
	/* #endif */
}

.scroll-h {
	width: 750rpx;
	/* #ifdef H5 */
	width: 100%;
	/* #endif */
	height: 80rpx;
	flex-direction: row;
	/* #ifndef APP-PLUS */
	white-space: nowrap;
	/* #endif */
	/* flex-wrap: nowrap; */
	/* border-color: #cccccc;
		border-bottom-style: solid;
		border-bottom-width: 1px; */
}

.line-h {
	height: 1rpx;
	background-color: #cccccc;
}

.uni-tab-item {
	/* #ifndef APP-PLUS */
	display: inline-block;
	/* #endif */
	flex-wrap: nowrap;
	padding-left: 34rpx;
	padding-right: 34rpx;
}

.uni-tab-item-title {
	color: #555;
	font-size: 30rpx;
	height: 80rpx;
	line-height: 80rpx;
	flex-wrap: nowrap;
	/* #ifndef APP-PLUS */
	white-space: nowrap;
	/* #endif */
}

.uni-tab-item-title-active {
	color: #0053a1;
}

.swiper-box {
	flex: 1;
}

.swiper-item {
	flex: 1;
	flex-direction: row;
}

.scroll-v {
	flex: 1;
	/* #ifndef MP-ALIPAY */
	flex-direction: column;
	/* #endif */
	width: 750rpx;
	width: 100%;
}

.update-tips {
	position: absolute;
	left: 0;
	top: 41px;
	right: 0;
	padding-top: 5px;
	padding-bottom: 5px;
	background-color: #fddd9b;
	align-items: center;
	justify-content: center;
	text-align: center;
}

.update-tips-text {
	font-size: 14px;
	color: #ffffff;
}

.refresh {
	width: 750rpx;
	width: 100%;
	height: 64px;
	justify-content: center;
}

.refresh-view {
	flex-direction: row;
	flex-wrap: nowrap;
	align-items: center;
	justify-content: center;
}

.refresh-icon {
	width: 30px;
	height: 30px;
	transition-duration: 0.5s;
	transition-property: transform;
	transform: rotate(0deg);
	transform-origin: 15px 15px;
}

.refresh-icon-active {
	transform: rotate(180deg);
}

.loading-icon {
	width: 20px;
	height: 20px;
	margin-right: 5px;
	color: #999999;
}

.loading-text {
	margin-left: 2px;
	font-size: 16px;
	color: #999999;
}

.loading-more {
	align-items: center;
	justify-content: center;
	padding-top: 10px;
	padding-bottom: 10px;
	text-align: center;
}

.loading-more-text {
	font-size: 28rpx;
	color: #999;
}
</style>
